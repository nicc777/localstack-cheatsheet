---
AWSTemplateFormatVersion: '2010-09-09'

Description: EKS Node Base which will be referenced by each node group created for the cluster.

Parameters:
  EksClusterNameParam:
    Type: 'String'
    MinLength: 1
  EksClusterEndPointUrlParam:
    Type: 'String'
    MinLength: 1
  EksClusterCertificateDataParam:
    Type: 'String'
    MinLength: 1
  EksNodeAmiIdSsmParam:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Description: AWS SSM parameter of the AMI ID for the EKS Node Instances. Change this value to match the version of Kubernetes you are using. Refer to https://docs.aws.amazon.com/eks/latest/userguide/retrieve-ami-id.html
    Default: 'not-set-1'
  ImageIdOverrideParam:
    Type: 'String'
    Description: 'If this value is supplied, it will override EksNodeAmiIdSsmParam'
    Default: 'not-set-2'
  ExtraSecurityGroupIds:
    Type: 'String'
    Description: Comma separated list of client security group ids in case multi-AZ FSx file systems or other scenarios

Conditions:
  ExtraSecurityGroupIdsIsEmpty: !Equals [ !Ref ExtraSecurityGroupIds, '' ]
  UseSSmImageId: !Equals [!Ref ImageIdOverrideParam, 'not-set-2']

Resources:

  NodeInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly'
        - !ImportValue Ec2AccessViaSsmPolicyArn
      Path: '/'
      RoleName: !Sub '${AWS::StackName}-NodeInstanceRole'

  EksNodeLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: !Sub '${AWS::StackName}-NodeLaunchTemplate'
      LaunchTemplateData:
        BlockDeviceMappings:
          - Ebs:
              VolumeSize: 96
              VolumeType: 'gp2'
              DeleteOnTermination: True
              Encrypted: True
            DeviceName: '/dev/xvda'
        # ImageId: !Ref EksNodeAmiIdSsmParam
        ImageId: !If [UseSSmImageId, !Ref EksNodeAmiIdSsmParam, !Ref ImageIdOverrideParam]
        SecurityGroupIds:
          Fn::If:
            - ExtraSecurityGroupIdsIsEmpty
            - [ !ImportValue ClusterGeneralSecurityGroupId, !ImportValue ClusterAdditionalSecurityGroupId, !ImportValue Ec2AccessViaSsmSecurityGroup ]
            - !Split [ ',', !Join [ ',', [ !Ref ExtraSecurityGroupIds, !ImportValue ClusterGeneralSecurityGroupId, !ImportValue ClusterAdditionalSecurityGroupId, !ImportValue Ec2AccessViaSsmSecurityGroup ] ] ]
        MetadataOptions:
          HttpEndpoint: 'enabled'
          HttpTokens: 'required'
        UserData:
          Fn::Base64:
            Fn::Sub:
              - |
                Content-Type: multipart/mixed; boundary="==BOUNDARY=="
                MIME-Version:  1.0
                --==BOUNDARY==
                Content-Type: text/x-shellscript; charset="us-ascii"
                
                #!/bin/bash
                              
                yum install -y python3 python3-pip python3-setuptools nfs-utils
                                
                echo "RUNNING EKS BOOTSTRAP"
                /etc/eks/bootstrap.sh ${EksClusterName} --b64-cluster-ca "${EksClusterCertificateData}" --apiserver-endpoint "${EksClusterEndPointUrl}"
                echo "EKS BOOTSTRAP DONE"
                echo
                echo
                echo "RUNNING CFN-SIGNAL"
                /opt/aws/bin/cfn-signal --exit-code $? --region ${AWS::Region} --stack ${AWS::StackName} --resource EksNodeLaunchTemplate
                echo "CFN-SIGNAL DONE"
                echo
                echo
                
                --==BOUNDARY==--
              - EksClusterName: !Ref EksClusterNameParam
                EksClusterEndPointUrl: !Ref EksClusterEndPointUrlParam
                EksClusterCertificateData: !Ref EksClusterCertificateDataParam

        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: !Sub 'kubernetes.io/cluster/${EksClusterNameParam}'
                Value: owned
              - Key: !Sub 'k8s.io/cluster-autoscaler/${EksClusterNameParam}'
                Value: owned
              - Key: 'k8s.io/cluster-autoscaler/enabled'
                Value: 'TRUE'

Outputs:
  EksNodeLaunchTemplate:
    Value: !Ref EksNodeLaunchTemplate
    Export:
      Name: EksNodeLaunchTemplate
  EksNodeLaunchTemplateLatestVersion:
    Value: !GetAtt EksNodeLaunchTemplate.LatestVersionNumber
    Export:
      Name: EksNodeLaunchTemplateLatestVersion
  EksNodeNodeInstanceRoleArn:
    Value: !GetAtt NodeInstanceRole.Arn
    Export:
      Name: EksNodeInstanceRoleArn