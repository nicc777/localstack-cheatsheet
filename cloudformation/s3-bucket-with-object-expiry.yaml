---
AWSTemplateFormatVersion: '2010-09-09'

Description: S3 Buckets

###
###   P A R A M E T E R S
###

Parameters:

  BucketNameParam:
    Type: 'String'
    MinLength: 1
  RetentionPeriodDays:
    Type: 'Number'
    Default: '3'


###
###   R E S O U R C E S
###

Resources:

  S3BucketResource:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Ref BucketNameParam
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: 'DeleteOldFilesRule'
            Status: Enabled
            ExpirationInDays: !Ref RetentionPeriodDays

  S3BucketResourcePolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketResource
      PolicyDocument:
        Statement:
          - Sid: 'DenyHttpAccess'
            Action:
              - 's3:*'
            Effect: Deny
            Principal: '*'
            Resource:
              - !GetAtt S3BucketResource.Arn
              - !Sub '${S3BucketResource.Arn}/*'
            Condition:
              Bool:
                'aws:SecureTransport': false
          - Sid: 'DenyIncorrectEncryptionHeader'
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub '${S3BucketResource.Arn}/*'
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'AES256'
          - Sid: 'DenyUnEncryptedObjectUploads'
            Effect: 'Deny'
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub '${S3BucketResource.Arn}/*'
            Condition:
              'Null':
                's3:x-amz-server-side-encryption': true

  S3BucketResourceReadPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: 'Policy for reading S3BucketResource'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'ReadAccess'
            Effect: 'Allow'
            Action:
              - 's3:GetBucketLocation'
              - 's3:GetObject'
              - 's3:GetObjectAcl'
              - 's3:GetObjectRetention'
              - 's3:GetObjectLegalHold'
              - 's3:GetObjectTagging'
              - 's3:GetObjectVersion'
              - 's3:GetObjectVersionTagging'
            Resource:
              - !GetAtt S3BucketResource.Arn
              - !Sub '${S3BucketResource.Arn}/*'

###
###   O U T P U T S
###

Outputs:

  S3BucketResourceName:
    Description: 'Name of S3BucketResource'
    Value: !Ref BucketNameParam
    Export:
      Name: S3BucketResourceName

  S3BucketResourceArn:
    Description: 'ARN of S3BucketResource'
    Value: !GetAtt S3BucketResource.Arn
    Export:
      Name: S3BucketResourceArn

  S3BucketResourceReadPolicyArn:
    Value: !Ref S3BucketResourceReadPolicy
    Export:
      Name: 'S3BucketResourceReadPolicyArn'
