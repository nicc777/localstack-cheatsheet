---
AWSTemplateFormatVersion: '2010-09-09'

Description: |
  EKS Cluster.

Parameters:
  EksClusterNameParam:
    Type: 'String'
    MinLength: 1
    MaxLength: 32
    Default: 'cluster1'
  EksClusterVersionParam:
    Type: 'String'
    MinLength: 1

Resources:

  ClusterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'eks.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${AWS::StackName}-ClusterLoggingPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEKSClusterPolicy'
        - 'arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy'
      RoleName: !Sub '${AWS::StackName}-ClusterRole'

  EksCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Ref EksClusterNameParam
      Version: !Ref EksClusterVersionParam
      RoleArn: !GetAtt ClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !ImportValue DnsAndHttpsSecurityGroupId
          - !ImportValue EksSecurityGroupId
        SubnetIds:
          - !ImportValue SubnetMainAz1
          - !ImportValue SubnetMainAz2
          - !ImportValue SubnetMainAz3
        EndpointPrivateAccess: true
        EndpointPublicAccess: false
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
            - Type: authenticator
            - Type: controllerManager
            - Type: scheduler

  CoreDnsAddon:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: 'coredns'
      ClusterName: !Ref EksCluster

  ProxyAddon:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: 'kube-proxy'
      ClusterName: !Ref EksCluster

  VpcCniAddon:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: 'vpc-cni'
      ClusterName: !Ref EksCluster

  VpcCsiAddon:
    Type: 'AWS::EKS::Addon'
    Properties:
      AddonName: 'aws-ebs-csi-driver'
      ClusterName: !Ref EksCluster

Outputs:
  EksClusterName:
    Description: 'Name of the EksCluster'
    Value: !Ref EksCluster
    Export:
      Name: !Sub '${AWS::StackName}-EksClusterName'
  EksClusterArn:
    Description: 'ARN of the EksCluster'
    Value: !GetAtt EksCluster.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EksClusterArn'
  EksClusterEndPointUrl:
    Description: 'End Point URL of the EksCluster'
    Value: !GetAtt EksCluster.Endpoint
    Export:
      Name: !Sub '${AWS::StackName}-EksClusterEndPointUrl'
