---
AWSTemplateFormatVersion: '2010-09-09'

Description: Creates an ECR repository

Parameters:

  NameParam:
    Type: 'String'
    MinLength: 3
    MaxLength: 128
    Description: 'A name for the repository'

  AccountAccessParam:
    Type: 'String'
    MinLength: 12
    MaxLength: 4096
    Description: 'AWS Account IDs, comma separated, maximum 12 accounts. Format: arn:aws:iam::<<ACCOUNT_ID>>:root'
    Default: '000000000000'

Conditions:
  OnlyCurrentAccountAccessRequired: !Equals [ !Ref AccountAccessParam, '000000000000' ]
  MultiAccountAccessRequired: !Not [ !Equals [ !Ref AccountAccessParam, '000000000000' ] ]

Resources:

  EcrRepoWithMultiAccountAccess:
    Type: 'AWS::ECR::Repository'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: MultiAccountAccessRequired
    Properties:
      EncryptionConfiguration:
        EncryptionType: 'KMS'
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: 'MUTABLE'
      RepositoryName: !Ref NameParam
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS: !Split [ ',' , !Ref AccountAccessParam ]
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
              - "ecr:ListImages"
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Expire images older than 60 days",
                "selection": {
                  "tagStatus": "any",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 90
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  EcrRepoWithCurrentAccountAccess:
    Type: 'AWS::ECR::Repository'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: OnlyCurrentAccountAccessRequired
    Properties:
      EncryptionConfiguration:
        EncryptionType: 'KMS'
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: 'MUTABLE'
      RepositoryName: !Ref NameParam
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Expire images older than 90 days",
                "selection": {
                  "tagStatus": "any",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 90
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

Outputs:

  EcrRepoWithMultiAccountAccessRepositoryUri:
    Condition: MultiAccountAccessRequired
    Description: 'URI for EcrRepo'
    Value: !GetAtt EcrRepoWithMultiAccountAccess.RepositoryUri
    Export:
      Name: !Sub '${AWS::StackName}-EcrUri'

  EcrRepoWithCurrentAccountAccessRepositoryUri:
    Condition: OnlyCurrentAccountAccessRequired
    Description: 'URI for EcrRepo'
    Value: !GetAtt EcrRepoWithCurrentAccountAccess.RepositoryUri
    Export:
      Name: !Sub '${AWS::StackName}-EcrUri'