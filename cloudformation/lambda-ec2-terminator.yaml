AWSTemplateFormatVersion: '2010-09-09'

Description: |
  A Lambda function that will terminate EC2 instances after a pre-configured time, that also has the
  `IdleStopperManaged` tag present. The maximum uptime of the instance is determined by the number of seconds set in
  the `MaxUptime` tag value.

Parameters:
  LambdaPackageS3BucketParam:
    Type: 'String'
    MinLength: 3
    MaxLength: 128
    Description: 'The bucket containing the Lambda function ZIP package'
  LambdaPackageKeyNameParam:
    Type: 'String'
    MinLength: 3
    MaxLength: 128
    Description: 'The ZIP file name (S3 key) with the packaged Lambda function. See https://docs.aws.amazon.com/lambda/latest/dg/python-package.html'
  MaxAgeEnvironmentVariableParam:
    Type: 'Number'
    MinValue: 1800
    MaxValue: 86400
    Default: 7200
    Description: 'The global default maximum age after which qualifying EC2 instances will be terminated.'

Resources:

  Ec2TerminatorIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: Ec2TerminatorBasicPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - "ec2:DescribeInstances"
                  - "ec2:TerminateInstances"
                Resource: "*"

  Ec2TerminatorLambdaFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt Ec2TerminatorLambdaFunction.Arn
      Principal: sns.amazonaws.com

  Ec2TerminatorLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub
        - "/aws/lambda/${LogGroupName}"
        - LogGroupName: !Ref Ec2TerminatorLambdaFunction
      RetentionInDays: 7

  Ec2TerminatorLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaPackageS3BucketParam
        S3Key: !Ref LambdaPackageKeyNameParam
      Description: |
        A Lambda function that will terminate EC2 instances after a pre-configured time, that also has the `IdleStopperManaged` 
        tag present. The maximum uptime of the instance is determined by the number of seconds set in the `MaxUptime` tag value.
      Handler: "ec2_terminator.handler"
      MemorySize: 128
      PackageType: Zip
      Role:
        Fn::GetAtt:
          - "Ec2TerminatorIamRole"
          - "Arn"
      Environment:
        Variables:
          MAX_AGE: !Ref MaxAgeEnvironmentVariableParam
      Runtime: python3.10
      Timeout: 300

Outputs:
  Ec2TerminatorLambdaFunctionName:
    Value: !Ref Ec2TerminatorLambdaFunction
    Export:
      Name: 'Ec2TerminatorLambdaFunctionName'
  Ec2TerminatorLambdaFunctionArn:
    Value: !GetAtt Ec2TerminatorLambdaFunction.Arn
    Export:
      Name: 'Ec2TerminatorLambdaFunctionArn'
